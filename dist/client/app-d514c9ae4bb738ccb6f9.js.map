{"version":3,"file":"app-d514c9ae4bb738ccb6f9.js","sources":["webpack:///./src/client/src/util/fetch.js"],"sourcesContent":["import axios from 'axios'\r\nimport qs from 'qs'\r\nimport { Message } from 'element-ui'\r\n\r\nconst PREFIX = '/api/',\r\n    TIMEOUT = 300000;\r\n\r\naxios.defaults.withCredentials = true\r\n\r\n// 发送时\r\naxios.interceptors.request.use(config => {\r\n    return config\r\n}, err => {\r\n    return Promise.reject(err)\r\n})\r\n\r\n// 响应时\r\naxios.interceptors.response.use(response => response, err => Promise.resolve(err.response))\r\n\r\n// 检查状态码\r\nfunction checkStatus(res) {\r\n    if (res.status === 200 || res.status === 304) {\r\n        return res.data\r\n    }\r\n    return {\r\n        code: 0,\r\n        msg: res.data.msg || res.statusText,\r\n        data: res.statusText\r\n    }\r\n    return res\r\n}\r\n\r\n\r\n// 检查CODE值\r\nfunction checkCode(res) {\r\n    if (res.code === 0) {\r\n        Message({\r\n            message: res.msg,\r\n            type: 'error',\r\n            duration: 2 * 1000\r\n        })\r\n\r\n        throw new Error(res.msg)\r\n    }\r\n\r\n    return res\r\n}\r\n\r\nexport default {\r\n    get(url, params) {\r\n        if (!url) return\r\n        return axios.get(PREFIX + url, {\r\n            params,\r\n            timeout: TIMEOUT\r\n        }).then(checkStatus).then(checkCode)\r\n    },\r\n\r\n    post(url, data) {\r\n        if (!url) return\r\n        return axios({\r\n            method: 'post',\r\n            url: PREFIX + url,\r\n            data: data,\r\n            timeout: TIMEOUT\r\n        }).then(checkStatus).then(checkCode)\r\n    },\r\n\r\n    delete(url, data) {\r\n        if (!url) return\r\n        return axios.delete(PREFIX + url, {\r\n            data: data,\r\n            timeout: TIMEOUT\r\n        }).then(checkStatus).then(checkCode)\r\n    },\r\n\r\n    put(url, data) {\r\n        if (!url) return\r\n        return axios.put(PREFIX + url, {\r\n            data: data,\r\n            timeout: TIMEOUT\r\n        }).then(checkStatus).then(checkCode)\r\n    }\r\n}"],"mappings":"AAoBA","sourceRoot":""}